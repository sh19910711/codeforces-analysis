Transform: 'AWS::Serverless-2016-10-31'

Resources:
  #
  # Common
  #
  FirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  Database:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: codeforces

  #
  # Submissions
  #
  SubmissionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: submissions.handler
      Runtime: python3.6
      CodeUri: ./functions/submissions.py
      MemorySize: 512
      Timeout: 60
      Policies:
        - AmazonKinesisFirehoseFullAccess
        - AWSLambdaInvocation-DynamoDB

  SubmissionsFunctionTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt SubmissionsQueue.StreamArn
      FunctionName: !GetAtt SubmissionsFunction.Arn
      StartingPosition: LATEST
      BatchSize: 1

  SubmissionsPushFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: submissions_push.handler
      Runtime: python3.6
      CodeUri: ./functions/submissions_push.py
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref SubmissionsQueue
      Policies:
        - AmazonDynamoDBFullAccess

  SubmissionsFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: codeforces-submissions
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: arn:aws:s3:::codeforces-analysis
        Prefix: data/gzip/submissions/
        CompressionFormat: GZIP
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 128
        RoleARN: !GetAtt FirehoseRole.Arn

  SubmissionsQueue:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: contest_id
          AttributeType: N
      KeySchema:
        - AttributeName: contest_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: KEYS_ONLY

  SubmissionsTable:
    Type: AWS::Glue::Table
    DependsOn: Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: codeforces
      TableInput:
        Name: submissions
        StorageDescriptor:
          Location: 's3://codeforces-analysis/data/parquet/submissions/'
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
          Columns:
            - Name: status_id
              Type: bigint
            - Name: contest_id
              Type: bigint
            - Name: create_time
              Type: string
            - Name: relative_time
              Type: string
            - Name: problem_index
              Type: string
            - Name: user_name
              Type: string
            - Name: participant_type
              Type: string
            - Name: language
              Type: string
            - Name: verdict
              Type: string
            - Name: passed_test_count
              Type: bigint
            - Name: execution_time
              Type: bigint
            - Name: execution_memory
              Type: bigint

  #
  # contests
  #
  ContestsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: contests.handler
      Runtime: python3.6
      CodeUri: ./functions/contests.py
      MemorySize: 256
      Timeout: 30
      Policies:
        - AmazonKinesisFirehoseFullAccess

  ContestsFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: codeforces-analysis-contests
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: arn:aws:s3:::codeforces-analysis
        Prefix: data/gzip/contests/
        CompressionFormat: GZIP
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 128
        RoleARN: !GetAtt FirehoseRole.Arn

  #
  # problems
  #
  ProblemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: problems.handler
      Runtime: python3.6
      CodeUri: ./functions/problems.py
      MemorySize: 256
      Timeout: 30
      Policies:
        - AmazonKinesisFirehoseFullAccess

  ProblemsFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: codeforces-analysis-problems
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: arn:aws:s3:::codeforces-analysis
        Prefix: data/gzip/problems/
        CompressionFormat: GZIP
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 128
        RoleARN: !GetAtt FirehoseRole.Arn

  ProblemTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: problem_tags.handler
      Runtime: python3.6
      CodeUri: ./functions/problem_tags.py
      MemorySize: 256
      Timeout: 30
      Policies:
        - AmazonKinesisFirehoseFullAccess

  ProblemsTagsFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: codeforces-analysis-problem-tags
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: arn:aws:s3:::codeforces-analysis
        Prefix: data/gzip/problem-tags/
        CompressionFormat: GZIP
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 128
        RoleARN: !GetAtt FirehoseRole.Arn


  #
  # Users
  #
  UsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: users.handler
      Runtime: python3.6
      CodeUri: ./functions/users.py
      MemorySize: 1024
      Timeout: 60
      Policies:
        - AmazonKinesisFirehoseFullAccess

  UsersFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: codeforces-analysis-users
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: arn:aws:s3:::codeforces-analysis
        Prefix: data/gzip/users/
        CompressionFormat: GZIP
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 128
        RoleARN: !GetAtt FirehoseRole.Arn
